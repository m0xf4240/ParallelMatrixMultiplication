#!/bin/sh

working_dir=/usr/local/mpiJava/mpiJava-amherst

prefix=/usr/local/mpiJava/mpiJava-amherst
exec_prefix=/usr/local/mpiJava/mpiJava-amherst

JAVA=/usr/java/jdk1.6.0_31


if test "" = ""
then
  if [ -f /usr/local/mpiJava/mpiJava-amherst/lib/libmpijava.so ]
  then
    CLASSPATH=.:/usr/local/mpiJava/mpiJava-amherst/lib/classes
    export CLASSPATH
  else
    CLASSPATH=.:/usr/local/mpiJava/mpiJava-amherst/lib
    export CLASSPATH
  fi
else
  if [ -f /usr/local/mpiJava/mpiJava-amherst/lib/libmpijava.so ]
  then
    CLASSPATH=.:/usr/local/mpiJava/mpiJava-amherst/lib/classes:
    export CLASSPATH
  else
    CLASSPATH=.:/usr/local/mpiJava/mpiJava-amherst/lib:
    export CLASSPATH
  fi
fi

if test "" = ""
then
  if [ -f /usr/local/mpiJava/mpiJava-amherst/lib/libmpijava.so ]
  then
    LIBPATH=/usr/local/mpiJava/mpiJava-amherst/lib
    export LIBPATH
  else
    LIBPATH=/usr/local/mpiJava/mpiJava-amherst
    export LIBPATH
  fi
else
  if [ -f /usr/local/mpiJava/mpiJava-amherst/lib/libmpijava.so ]
  then
    LIBPATH=/usr/local/mpiJava/mpiJava-amherst/lib:
    export LIBPATH
  else
    LIBPATH=/usr/local/mpiJava/mpiJava-amherst:
    export LIBPATH
  fi
fi

#
# notice we have to export the LIBPATH as the LD path, but since
# are within a hereto doc block we have to specify the $ so that the LIBPATH
# gets eval'd at the time the "jig" is running - this is a mess!
#
LD_LIBRARY_PATH=$LIBPATH
export LD_LIBRARY_PATH

#echo $0
cd `dirname $0`




exec /usr/java/jdk1.6.0_31/bin/java  MatrixMult MatrixMult $* 

